numeric_variable1 <- 49.8
print(numeric_variable1)
numeric_variable1 <- 49.8
print(numeric_variable1)
cat("This variable is a ",class(numeric_variable1),"\n\n")
numeric_variable2 <- 367L
print(numeric_variable2)
cat("This variable is a ",class(numeric_variable2),"\n\n")
numeric_variable2 <- 3678979837192837
print(numeric_variable2)
cat("This variable is a ",class(numeric_variable2),"\n\n")
integer_variable <- 3L
print(integer_variable)
integer_variable <- 3L
print(integer_variable)
cat("This variable is a ",class(integer_variable),"\n\n")
integer_variable1 <- 567L
cat(integer_variable1)
integer_variable1 <- 567L
cat(integer_variable1)
cat("This variable is a ",class(integer_variable1),"\n\n")
integer_variable1 <- 567L
cat(integer_variable1,"\n")
cat("This variable is a ",class(integer_variable1),"\n\n")
integer_variable2 <- 576.8L
print(integer_variable2)
cat("This variable is a ",class(integer_variable2),"\n\n")
complex_variable <- 3+4i
print(complex_variable)
cat("This variable is a ",class(complex_variable),"\n\n")
complex_variable1 <- 5+7L
print(complex_variable1)
cat("This variable is a ",class(complex_variable1),"\n\n")
complex_variable1 <- 5+7i
print(complex_variable1)
cat("This variable is a ",class(complex_variable1),"\n\n")
character_variable <- 'a'
print(character_variable)
cat("This variable is a ",class(character_variable),"\n\n")
cat(character_variable)
character_variable1 <- "this is a string"
print(character_variable1)
character_variable1 <- "this is a string"
print(character_variable1)
cat("This variable is a ",class(character_variable1),"\n\n")
character_variable2 <- 'this is a 2nd string'
print(character_variable2)
cat("This variable is a ",class(character_variable2),"\n\n")
character_variable3 <- '67.28'
print(character_variable3)
cat("This variable is a ",class(character_variable3),"\n\n")
raw_variable <- "Learn R Programming Language"
print(raw_variable)
cat("This variable is a ",class(raw_variable),"\n\n")
raw_variable <- charToRaw("Learn R Programming Language")
print(raw_variable)
cat("This variable is a ",class(raw_variable),"\n\n")
raw_variable1 <- charToRaw("Hello R Programming")
print(raw_variable1)
cat("This variable is a ",class(raw_variable1),"\n\n")
rm(list = ls())
num1 <- c(1:10)
print(num1)
num1 <- c(1,2,3,4,5,6,7,8,9,10)
print(num1)
num1 <- c(1,2,3,4,5,6,7,8,9,10)
print(num1)
cat("This Argument are ",class(num1),"\n\n")
char1 <- c('a','b','c','d','f')
print(char1)
cat("This Arguments are ",class(char1),"\n\n")
char2 <- c[1:5]
char2 <- chr[1:5]
char2 <- c[1:5]
char2 <- c(1:5)
print(char2)
integer1 <- c(45L,17L,93L,28L,927L)
print(integer1)
integer1 <- c(45L,17L,93L,28L,927L)
print(integer1)
cat("This Arguments are ",integer1,"\n\n")
integer1 <- c(45L,17L,93L,28L,927L)
print(integer1)
cat("This Arguments are ",class(integer1),"\n\n")
numeric1 <- c(1,2,3,4,5,6,7,8,9,10)
print(num1)
cat("This Argument are ",class(num1),"\n\n")
cat(char1)
numeric2 <- c(10:20)
print(numeric2)
cat("This Argument are ",class(numeric2),"\n\n")
char2 <- c('a':'m')
char2 <- c(a:m)
logical1 <- c(TRUE,FALSE,TRUE,TRUE)
print(logical1)
cat("This Arguments are ",class(logical1),"\n\n")
complex1 <- c(3+4i,7+5i,6+9i,7-4i)
print(complex1)
cat("This Arguments are ",class(complex1),"\n\n")
print(complex1,"\n")
print(complex1)
rm(list = ls())
number1 <- c(1:3)
number2 <- c(4:6)
print(number1,number2)
number1 <- c(1:3)
number2 <- c(4:6)
print(number1)
print(number2)
sum <- number1+number2
print(sum)
var1 <- c(11:15)
var2 <- c(16:20)
print(var1)
print(var2)
print(var1-var2)
num1 <- c(2,4,6,8,10)
num2 <- c(2,4,6,8,10)
print(num1)
print(num2)
print(num1*num2)
div_num1 <- c(10,20,30,40)
print(div_num1)
div_sum <- div_num1/2
print(div_sum)
print(div_num1)
rem_num1 <- c(29,49,57,23)
rem_num2 <- c(53,48,27,37)
print(rem_num1)
print(rem_num2)
print(rem_num1%%rem_num1)
rem_num1 <- c(2, 3.3, 4)
rem_num2 <- c(11, 5, 3)
print(rem_num1)
print(rem_num2)
print(rem_num1%%rem_num1)
rem_num1 <- c(2, 3.3, 4)
rem_num2 <- c(11, 5, 3)
print(rem_num1)
print(rem_num2)
print(rem_num1%%rem_num2)
md1 <- c(2, 3.3, 4)
md2 <- c(11, 5, 3)
print(md1)
print(md2)
print(md1%/%md2)
ex1 <- c(2, 3.3, 4)
ex2 <- c(11, 5, 3)
print(ex1)
print(ex2)
print(ex1 ^ ex2)
print(realation1 > realation2)
realation1 <- c(1,3,5)
realation2 <- c(2,4,6)
#case 1 : > Greater than Symbol
print(realation1 > realation2)
print(realation1 < realation2)
print(realation3 >= realation4)
realation3 <- c(4,8,2)
realation4 <- c(3,8,5)
#case 3: >= Greater than Or Equal Operation
print(realation3 >= realation4)
print(realation3 <= realation4)
print(realation4 == realation3)
print(realation3 != realation4)
rm(list = ls())
variable1 <- 40
if (variable1 %% 2 == 0) {
cat(variable1," is a Even Number")
}
variable2 <- 11
if ( variable2 %% 2 != 0) {
cat(variable2," is an Odd Number")
}
if ( variable1 > variable2 ) {
cat(variable1," is a Largest Number")
}
if (variable1 < variable2) {
cat(variable1," is a Largest Number")
}
cat(variable2," is a Smallest Number")
variable3 <- 10
variable4 <- 10
if ( variable3 == variable4 ) {
print("variable3 and variable4 are equal")
}
variable3 <- 10L
variable4 <- 10
if ( variable3 == variable4 ) {
print("variable3 and variable4 are equal")
}
variable3 <- 10L
variable4 <- 10L
if ( is.integer(variable3) == is.integer(variable4) ) {
print("variable3 and variable4 are equal")
}
print("variable4 and variable4 are equal")
variable3 <- 10L
variable4 <- 10L
if ( is.integer(variable3) == is.integer(variable4) ) {
print("variable4 and variable4 are equal")
}
variable3 <- 10L
variable4 <- 10L
if ( is.integer(variable3) == is.integer(variable4) ) {
print(variable3," and ",variable4,"are equal")
}
variable3 <- 10L
variable4 <- 10L
if ( is.integer(variable3) == is.integer(variable4) ) {
cat(variable3," and ",variable4,"are equal")
}
rm(list = ls())
set.seed(100)
x <- matrix(rnorm(40),20,2)
y <- rep(c(-1,1),c(10,10))
x[y == 1,] = x[y == 1,] + 1
plot(x, col = y + 3, pch = 19)
rm(list = ls())
var_1 <- 100
if ( var_1 < 20)
{
cat(var_1," is less than 20")
}
else
var_1 <- 100
if ( var_1 < 20) {
cat(var_1," is less than 20")
}else{
cat(var_1," is greater than 20")
}
var_2 <- 'e'
# vowels : a,e,i,o,u
if ( var_2=='a' || var_2=='e' || var_2=='i' || var_2=='o' || var_2=='u' || var_2=='A' || var_2=='E' || var_2=='I' || var_2=='O' || var_2=='U' ) {
cat(var_2," is a vowel letter")
}else
{
cat(var_2,"is a constant letter")
}
var_2 <- 'm'
# vowels : a,e,i,o,u
if ( var_2=='a' || var_2=='e' || var_2=='i' || var_2=='o' || var_2=='u' || var_2=='A' || var_2=='E' || var_2=='I' || var_2=='O' || var_2=='U' ) {
cat(var_2," is a vowel letter")
}else
{
cat(var_2,"is a constant letter")
}
var_3 <- c("Hello","World","Key","America")
if ("Key" %in% var_3) {
print("Key is Founded")
}else
{
print("Key is not Founded")
}
var_3 <- c("Hello","World","Key","America")
if ("Key" == var_3) {
print("Key is Founded")
}else
{
print("Key is not Founded")
}
var_3 <- c("Hello","World","Key","America")
if ("Key" %in% var_3) {
print("Key is Founded")
}else
{
print("Key is not Founded")
}
var_3 <- c("Hello","World","Key","America")
if ("Keys" %in% var_3) {
print("Key is Founded")
}else
{
print("Key is not Founded")
}
var_3 <- c("Hello","World","Key","America")
if ("Key" %in% var_3) {
print("Key is Founded")
}else
{
print("Key is not Founded")
}
var_4 <- 200
if ( var_4 < 100) {
cat(var_4," is less than 100 and")
if ( var_4 %% 2 == 0) {
cat(var_4," is an even number\n")
}else
{
cat(var_4," is an odd number\n")
}
}else
{
cat(var_4," is greater than 100 and")
if ( var_4 %% 2 == 0) {
cat(var_4," is an even number\n")
}else
{
cat(var_4," is an odd number\n")
}
}
var_4 <- 209
if ( var_4 < 100) {
cat(var_4," is less than 100 and ")
if ( var_4 %% 2 == 0) {
cat(var_4," is an even number\n")
}else
{
cat(var_4," is an odd number\n")
}
}else
{
cat(var_4," is greater than 100 and ")
if ( var_4 %% 2 == 0) {
cat(var_4," is an even number\n")
}else
{
cat(var_4," is an odd number\n")
}
}
rm(list = ls())
data <- read.csv("record.csv")
data <- read.csv("record.csv")
data <- read.csv("record.csv")
data <- read.csv("record.csv")
data()
data()
data <- read.csv("record.csv")
setwd("C:/Users/TUF/OneDrive/Documents/College-Workshop/R-Programming")
data <- read.csv("record.csv")
print(data)
View(data)
rm(list = ls())
rm(list = ls())
rm(list = ls())
mylist <- scan()
print(mylist)
mylist <- scan()
mylist <- scan()
mylist <- scan()
mylist <- as.character(mylist)
joyal
mylist <- scan()
print(mylist)
1
2
mylist <- scan()
print(mylist)
mylist <- as.character(mylist)
print(mylist)
mark <- 59
if ( mark > 90 ) {
cat("A Grade")
}else if ( mark > 80) {
cat("B Grade")
}else if ( mark > 70) {
cat("C Grade")
}else if ( mark > 60) {
cat("D Grade")
}else if (mark < 50){
cat("Just Pass")
}else
{
cat("Failed All Papers")
}
mark <- 59
if ( mark > 90 ) {
cat("A Grade")
}else if ( mark > 80) {
cat("B Grade")
}else if ( mark > 70) {
cat("C Grade")
}else if ( mark > 60) {
cat("D Grade")
}else if (mark > 50){
cat("Just Pass")
}else
{
cat("Failed All Papers")
}
mark <- readline(prompt = "Enter Your Mark :")
if ( mark > 90 ) {
cat("A Grade")
}else if ( mark > 80) {
cat("B Grade")
}else if ( mark > 70) {
cat("C Grade")
}else if ( mark > 60) {
cat("D Grade")
}else if (mark > 50){
cat("Just Pass")
}else
{
cat("Failed All Papers")
}
mark <- readline(prompt = "Enter Your Mark :")
if ( mark > 90 ) {
cat("A Grade")
}else if ( mark > 80) {
cat("B Grade")
}else if ( mark > 70) {
cat("C Grade")
}else if ( mark > 60) {
cat("D Grade")
}else if (mark > 50){
cat("Just Pass")
}else
{
cat("Failed All Papers")
}
mark <- readline(prompt = "Enter Your Mark :")
mark <- as.integer(mark)
if ( mark > 90 ) {
cat("A Grade")
}else if ( mark > 80) {
cat("B Grade")
}else if ( mark > 70) {
cat("C Grade")
}else if ( mark > 60) {
cat("D Grade")
}else if (mark > 50){
cat("Just Pass")
}else
{
cat("Failed All Papers")
}
mark <- readline(prompt = "Enter Your Mark :")
mark <- as.integer(mark)
67
if ( mark > 90 ) {
cat("A Grade")
}else if ( mark > 80) {
cat("B Grade")
}else if ( mark > 70) {
cat("C Grade")
}else if ( mark > 60) {
cat("D Grade")
}else if (mark > 50){
cat("Just Pass")
}else{
cat("Failed All Papers")
}
mark <- 67
if ( mark > 90 ) {
cat("A Grade")
}else if ( mark > 80) {
cat("B Grade")
}else if ( mark > 70) {
cat("C Grade")
}else if ( mark > 60) {
cat("D Grade")
}else if (mark > 50){
cat("Just Pass")
}else{
cat("Failed All Papers")
}
cat("1) For Addition\n")
cat("2) For Subtraction\n")
cat("3) For Division\n")
cat("4) For multiplication\n")
n1<-readline(prompt="Enter first number:")
choice<-readline(prompt="Enter your choice:")
n2<- as.integer(n2)
n1<-readline(prompt="Enter first number:")
choice<-readline(prompt="Enter your choice:")
n2<- as.integer(n2)
cat("1) For Addition\n")
cat("2) For Subtraction\n")
cat("3) For Division\n")
cat("4) For multiplication\n")
n1<-readline(prompt="Enter first number:")
choice<-readline(prompt="Enter your choice:")
n2 <- as.integer(n2)
choice<-readline(prompt="Enter your choice:")
choice<-readline(prompt="Enter your choice:")
choice<- as.integer(choice)
choice<- as.numeric(choice)
cat(" 1) Addition\n")
cat(" 2) Subtraction\n")
cat(" 3) Multiplication\n")
cat(" 4) Division\n")
cat(" 5) Remainder\n")
number1 <- readline(prompt = "Enter the First number:")
choice <- readline(prompt = "Enter Your Choice :")
cat(" 2) Subtraction\n")
cat(" 3) Multiplication\n")
cat(" 4) Division\n")
cat(" 5) Remainder\n")
number1 <- readline(prompt = "Enter the First number:")
number2 <- readline(prompt = "Enter the Second number :")
choice <- readline(prompt = "Enter Your Choice :")
number1 <- as.integer(number1)
number2 <- as.integer(number2)
choice <- as.integer(choice)
if ( choice == 1 ) {
cat("\nAddition :")
print(number1+number2)
}else if ( choice == 2 ) {
cat("\nSubtraction :")
print(number1-number2)
}else if ( choice == 3 ) {
cat("\nMultiplication :")
print(number1*number2)
}else if ( choice == 4 ) {
cat("\nDivision :")
print(number1/number2)
}else if ( choice == 5 ) {
cat("\nReminder :")
print(number1%%number2)
}else{
print("Invalid Choice")
}
